pipeline {
    agent any

    tools {
        nodejs 'NodeJS 16.13.2'
    }

    environment {
        // Docker Hub 로그인 정보 (Jenkins Credential ID)
        IMAGE_NAME        = 'hanol98/runners-hi-frontend'
        K8S_MANIFEST_DIR  = 'deploy/k8s'
        GIT_CONFIG_USERNAME = 'hanol98'
        GIT_CONFIG_EMAIL = 'hanol98@naver.com'
    }

    options {
        // workspace를 깨끗하게 유지하되, 캐시는 별도로 관리
        skipDefaultCheckout(false)
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Install Dependencies') {
            steps {
                sh '''
                    echo "📦 Installing dependencies"
                    npm install
                '''
            }
        }

        stage('Build React') {
            steps {
                sh '''
                    echo "🔨 Building React App"
                    CI=false GENERATE_SOURCEMAP=false npm run build
                '''
            }
        }

        stage('Build & Push Docker Image') {
            steps {
                script {
                    // 1) Docker 빌드
                    sh """
                        echo "🐳 Building Docker image"
                        docker build -t ${IMAGE_NAME}:${BUILD_NUMBER} .
                    """
                    // 2) Docker Hub 로그인 & 푸시
                    withCredentials([
                        usernamePassword(
                            credentialsId: 'Docker-Hub-Access-Token',
                            usernameVariable: 'DOCKER_USER',
                            passwordVariable: 'DOCKER_PASS'
                        )
                    ]) {
                        sh """
                            echo "🔑 Docker login"
                            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin
                            echo "🚀 Pushing image"
                            docker push ${IMAGE_NAME}:${BUILD_NUMBER}
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            echo '🧹 Cleaning workspace'
            sh '''
                rm -rf build
            '''
        }
    }
}
